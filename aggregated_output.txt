===== ./temp/.gitignore =====
# Terraform
.terraform/
*.tfstate
*.tfstate.*

# Sensitive variable files
*.tfvars
*.tfvars.json

# Crash logs
crash.log
crash.*.log

# CLI config
.terraformrc
terraform.rc

# Local / editor junk
.DS_Store
.idea/
.vscode/

# Plan & override files
*.tfplan
override.tf
override.tf.json
*_override.tf
*_override.tf.json
kind-fluxcd-config


===== ./temp/main.tf =====
terraform {
  required_providers {
    github = { source = "integrations/github", version = "6.6.0" }
    kind   = { source = "tehcyx/kind", version = "0.8.0" }
    flux   = { source = "fluxcd/flux", version = "1.6.1" }
    tls    = { source = "hashicorp/tls", version = "4.1.0" }
  }
}

provider "github" {
  owner = var.GITHUB_OWNER
  token = var.GITHUB_TOKEN
}

module "tls_keys" { source = "./modules/tls_keys" }

module "kind_cluster" {
  source       = "./modules/kind_cluster"
#  cluster_name = var.cluster_name

}

module "github_repository" {
  source                   = "./modules/github-repository"
  FLUX_GITHUB_REPO         = var.repository_name
  repository_visibility    = var.repository_visibility
  public_key_openssh       = module.tls_keys.public_key_openssh
  public_key_openssh_title = "flux-cluster-key"
  GITHUB_OWNER             = var.GITHUB_OWNER
  GITHUB_TOKEN             = var.GITHUB_TOKEN
}
# provider "kubernetes" {
#   config_path = module.kind_cluster.kubeconfig
# }
# resource "local_file" "kubeconfig" {
#   content  = module.kind_cluster.kubeconfig
#   filename = "./kubeconfig.yaml"
# }
provider "flux" {
  kubernetes = {
    config_path = "./kind-fluxcd-config"
  }
  git = {
    url = "https://github.com/${var.GITHUB_OWNER}/${var.repository_name}.git"
    http = {
      username = "git"
      password = var.GITHUB_TOKEN
    }
  }
}

module "fluxcd_bootstrap" {
  source            = "./modules/fluxcd_bootstrap/"
  github_repository = "${var.GITHUB_OWNER}/${var.repository_name}"
  private_key       = module.tls_keys.private_key_pem
  # config_host       = module.kind_cluster.endpoint
  # config_client_key = module.kind_cluster.client_key
  # config_ca         = module.kind_cluster.ca
  # config_crt        = module.kind_cluster.crt
  github_token      = var.GITHUB_TOKEN
  providers = {
    flux = flux
  }
}


===== ./temp/modules/fluxcd_bootstrap/main.tf =====

# resource "flux_bootstrap_git" "this" {
#   provider = flux
#   path     = var.target_path
# }
resource "flux_bootstrap_git" "this" {
 # provider = flux
  path = var.target_path
}


===== ./temp/modules/fluxcd_bootstrap/readme.md =====

# Terraform Flux Bootstrap Git Module

This Terraform module creates a Git repository to be used as a source for Flux Bootstrap.

## Usage


module "flux_bootstrap" {
  source            = "./modules/fluxcd-flux-bootstrap"
  github_repository = "${var.GITHUB_OWNER}/${var.FLUX_GITHUB_REPO}"
  private_key       = module.tls_private_key.private_key_pem
  config_path       = module.gke_cluster.kubeconfig
  github_token      = var.GITHUB_TOKEN
}

## Inputs

-   github_repository - (Required) The name of the Git repository to be created.
-   target_path - (Optional) The path to clone the Git repository into. Default value is clusters.
-   private_key - (Optional) The SSH private key to use for Git operations.
-   config_path - (Optional) The path to the Kubernetes configuration file. Default value is ~/.kube/config.
-   github_token -(Required) The GitHub token ised by fluxcd/flux provider

## Outputs

None.

License This module is licensed under the MIT License. See the LICENSE file for details.


===== ./temp/modules/fluxcd_bootstrap/terraform.tf =====
terraform {
  required_providers {
    flux = {
      source  = "fluxcd/flux"
      version = "1.6.1"
    }
  }
}


===== ./temp/modules/fluxcd_bootstrap/variables.tf =====

# variable "github_repository" {
#   type        = string
#   description = "GitHub repository to store Flux manifests"
# }

# variable "target_path" {
#   type        = string
#   default     = "clusters/"
#   description = "Flux manifests subdirectory"
# }

# variable "github_token" {
#   type        = string
#   default     = ""
#   description = "The token used to authenticate with the Git repository"
# }

# variable "client_key" {
#   type        = string
#   description = "The private key used to authenticate with the Git repository"
# }

# variable "kubeconfig" {
#   type        = string
#   default     = "~/.kube/config"
#   description = "The path to the kubeconfig file"
# }
# variable "crt" {
#   type        = string
# #  default     = "crt"
#   description = "The path to the kubeconfig file"
# }

# variable "endpoint" {
#   type        = string
# #  default     = "crt"
#   description = "endpoint of the cluster"
# }
variable "github_repository" {
  type        = string
  description = "GitHub repository to store Flux manifests"
}

variable "flux_namespace" {
  type        = string
  default     = "flux-system"
  description = "GitHub repository to store Flux manifests"
}

variable "target_path" {
  type        = string
  default     = "cluster/demo"
  description = "Flux manifests subdirectory"
}

variable "github_token" {
  type        = string
  default     = ""
  description = "The token used to authenticate with the Git repository"
}

variable "private_key" {
  type        = string
  description = "The private key used to authenticate with the Git repository"
}

variable "config_host" {
  type        = string
  default     = "gke"
  description = "The url for kind"
}

variable "config_client_key" {
  type        = string
  default     = "client_key"
  description = "The token for kind"
}

variable "config_crt" {
  type        = string
  default     = "ca"
  description = "The ca for kind"
}


variable "config_ca" {
  type        = string
  default     = "ca"
  description = "The ca for kind"
}


===== ./temp/modules/github-repository/main.tf =====
provider "github" {
  owner = var.GITHUB_OWNER
  token = var.GITHUB_TOKEN
}

resource "github_repository" "this" {
#  count      = var.create_repository ? 1 : 0
  name       = var.FLUX_GITHUB_REPO
  visibility = var.repository_visibility
  auto_init  = true
}

resource "github_repository_deploy_key" "this" {
  title      = var.public_key_openssh_title
  repository = github_repository.this.name
  key        = var.public_key_openssh
  read_only  = false
}


===== ./temp/modules/github-repository/output.tf =====
output "name" {
  value = github_repository.this.name
}


===== ./temp/modules/github-repository/terraform.tf =====
terraform {
  required_providers {
    github = {
      source  = "integrations/github"
      version = ">= 6.6.0"
    }
  }
}


===== ./temp/modules/github-repository/variables.tf =====
variable "GITHUB_OWNER" {
  type        = string
  description = "The GitHub owner"
}

variable "GITHUB_TOKEN" {
  type        = string
  description = "GitHub personal access token"
}

variable "FLUX_GITHUB_REPO" {
  type        = string
  description = "GitHub repository"
}

variable "repository_visibility" {
  type        = string
  default     = "private"
  description = "The visibility of the GitOps repository"
}

variable "branch" {
  type        = string
  default     = "main"
  description = "GitHub branch"
}

variable "public_key_openssh" {
  type        = string
  description = "OpenSSH public key repository access"
}

variable "public_key_openssh_title" {
  type        = string
  description = "The title for OpenSSH public key"
}


===== ./temp/modules/kind_cluster/main.tf =====
resource "kind_cluster" "this" {
  name       = "kind-fluxcd"
  wait_for_ready = true
}


===== ./temp/modules/kind_cluster/output.tf =====
output "client_key" {
  value = kind_cluster.this.client_key
}

output "ca" {
  value = kind_cluster.this.cluster_ca_certificate
}

output "crt" {
  value = kind_cluster.this.client_certificate
}

output "endpoint" {
  value = kind_cluster.this.endpoint
}

output "kubeconfig" {
  value = kind_cluster.this.kubeconfig
  sensitive = true
}


===== ./temp/modules/kind_cluster/terraform.tf =====
terraform {
  required_providers {
    kind = {
      source  = "tehcyx/kind"
      version = "0.8.0"
    }
  }
}


===== ./temp/modules/tls_keys/main.tf =====
resource "tls_private_key" "this" {
  algorithm   = var.algorithm
  ecdsa_curve = var.ecdsa_curve
}


===== ./temp/modules/tls_keys/output.tf =====
output "private_key_pem" {
  sensitive = true
  value = tls_private_key.this.private_key_pem
}

output "public_key_openssh" {
  sensitive = true
  value = tls_private_key.this.public_key_openssh
}


===== ./temp/modules/tls_keys/terraform.tf =====
terraform {
  required_providers {
    tls = {
      source  = "hashicorp/tls"
      version = "4.1.0"
    }
  }
}


===== ./temp/modules/tls_keys/variables.tf =====
variable "algorithm" {
  type        = string
  default     = "ECDSA"
  description = "The cryptographic algorithm (e.g. RSA, ECDSA)"
}

variable "ecdsa_curve" {
  type        = string
  default     = "P256"
  description = "The elliptic curve (e.g. P256, P384, P521)"
}


===== ./temp/output.tf =====
output "flux_public_key" {
  description = "Add this key to GitHub â†’ Deploy keys (RW)"
  value       = module.tls_keys.public_key_openssh
}

output "kubeconfig" {
  description = "Kubeconfig for the freshly created Kind cluster"
  value       = module.kind_cluster.kubeconfig
  sensitive   = true
}


===== ./temp/variables.tf =====
variable "GITHUB_OWNER" {
  description = "GitHub owner"
  type        = string
}

variable "GITHUB_TOKEN" {
  description = "GitHub personal access token"
  type        = string
  sensitive   = true
}

variable "repository_name" {
  description = "Name of GitOps repository to create"
  type        = string
}

variable "repository_visibility" {
  description = "Visibility of the GitOps repository"
  type        = string
  default     = "private"
}

variable "config_raw" {
  description = "kubeconfig"
  type        = string
}

variable "target_path" {
  description = "Path in the Git repo where Flux manifests live"
  type        = string
  default     = "clusters/dev"
}

# variable "FLUX_GITHUB_REPO" {
#   description = "flux repo"
#   type        = string
# }


